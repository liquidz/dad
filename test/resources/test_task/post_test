#!/bin/bash

. test_helper

### directory
if [ ! -d ${BASE_DIR}/post ]; then
    echo "directory: ${BASE_DIR}/post is not found."
    exit 1
fi

${DAD_CMD} --eval "(directory {:path \"${BASE_DIR}/post\" :mode \"744\"})" --dry-run --no-color | grep chmod | grep 'WILL NOT'
if [ $? -ne 0 ]; then
    echo "directory: ${BASE_DIR}/post has a unexpcedted permission."
    exit 1
fi

if [ -d ${BASE_DIR}/pre/a ]; then
    echo "directory: ${BASE_DIR}/pre/a exists yet."
    exit 1
fi

### download
if [ ! -e ${BASE_DIR}/project.clj ]; then
    echo "download: ${BASE_DIR}/project.clj is not found."
    exit 1
fi

${DAD_CMD} --eval "(file {:path \"${BASE_DIR}/project.clj\" :mode \"755\"})" --dry-run --no-color | grep chmod | grep 'WILL NOT'
if [ $? -ne 0 ]; then
    echo "download: ${BASE_DIR}/project.clj has a unexpcedted permission."
    exit 1
fi

head -n 1 ${BASE_DIR}/project.clj | grep 'defproject dad' > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "download: ${BASE_DIR}/project.clj has a invalid content."
    exit 1
fi

### file
if [ ! -e ${BASE_DIR}/foo ]; then
    echo "file: ${BASE_DIR}/foo is not found."
    exit 1
fi

if [ -e ${BASE_DIR}/pre/dummy ]; then
    echo "file: ${BASE_DIR}/pre/dummy exists yet."
    exit 1
fi

### git
if [ ! -e ${BASE_DIR}/dad/project.clj ]; then
    echo "git: ${BASE_DIR}/dad/project.clj is not found."
    exit 1
fi

${DAD_CMD} --eval "(git {:url \"https://github.com/liquidz/dad\" :path \"${BASE_DIR}/dad\" :revision \"master\"})" --dry-run --no-color | grep checkout | grep 'WILL NOT'
if [ $? -ne 0 ]; then
    echo "git: ${BASE_DIR}/dad has a unexpcedted revision."
    exit 1
fi

### execute
if [ ! -e ${BASE_DIR}/hello ]; then
    echo "execute: ${BASE_DIR}/hello is not found."
    exit 1
fi

if [ -e ${BASE_DIR}/error ]; then
    echo "execute: ${BASE_DIR}/error exists."
    exit 1
fi

### link
if [ ! -L ${BASE_DIR}/world ]; then
    echo "link: ${BASE_DIR}/world is not a symbolic link."
    exit 1
fi

ls -l ${BASE_DIR}/world | grep "\-> ${BASE_DIR}/hello" > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "link: ${BASE_DIR}/world's destination is not ${BASE_DIR}/hello."
    exit 1
fi

${DAD_CMD} --eval "(link {:path \"${BASE_DIR}/world\" :to \"${BASE_DIR}/hello\"})" --dry-run --no-color | grep link | grep 'WILL NOT'
if [ $? -ne 0 ]; then
    echo "link: pre-condition is not working correctly."
    exit 1
fi

### package
# install
${DAD_CMD} --eval '(package {:name "sl"})' --dry-run --no-color | grep 'package-install' | grep 'WILL NOT'
if [ $? -ne 0 ]; then
    echo "package: sl is not installed."
    exit 1
fi

# uninstall
${DAD_CMD} --eval '(package {:name "cowsay" :action :uninstall})' --dry-run --no-color | grep 'package-uninstall' | grep 'WILL NOT'
if [ $? -ne 0 ]; then
    echo "package: cowsay is installed yet."
    exit 1
fi

### template
if [ ! -e ${BASE_DIR}/tmpl ]; then
    echo "template: ${BASE_DIR}/tmpl is not found."
    exit 1
fi

${DAD_CMD} --eval "(file {:path \"${BASE_DIR}/tmpl\" :mode \"755\"})" --dry-run --no-color | grep chmod | grep 'WILL NOT'
if [ $? -ne 0 ]; then
    echo "template: ${BASE_DIR}/tmpl has a unexpcedted permission."
    exit 1
fi

${DAD_CMD} --eval "(template {:path \"${BASE_DIR}/tmpl\" :source \"template.tmpl\" :variables {:foo \"bar\" :bar \"baz\"}})" --dry-run --no-color | grep 'template-create' | grep 'WILL NOT'
if [ $? -ne 0 ]; then
    echo "template: tmpl does not have a valid content."
    exit 1
fi
